---
title: "Data Science Final"
format: pdf
---
```{r, echo = FALSE}
library("RSocrata")
library(tidyverse)
library(stringr)
library(lubridate)
library(sf)
library(dplyr)
library(ggplot2)
library(patchwork)
library(readxl)
```


## Water point data
We download the data using a KPI. We then filter to keep data on Cox's Bazar exclusively.
```{r}
#Downloading the data 
df <- read.socrata(
  "https://data.waterpointdata.org/resource/eqje-vguj.json?country_id=BGD",
  app_token = "your token",
  email     = "email you signed up with",
  password  = "your password"
)

#Filtering the data
filtered_df <- df %>%
  filter(!is.na(lat_deg), !is.na(lon_deg)) %>%
  filter(clean_adm2 == "Cox'S Bazar")


filtered_df <- st_as_sf(filtered_df, coords = c("lon_deg", "lat_deg"), remove = FALSE) %>%
  st_set_crs(value = 4326)

#Ploting the map:
ggplot() +
  geom_sf(data = filtered_df, aes(color = status_clean))
```


## Administrative division data
https://data.humdata.org/dataset/401d3fae-4262-48c9-891f-461fd776d49b/resource/08736818-ae72-44a9-abd6-a51915c24921/download/bgd_adm_bbs_20201113_shp.zip

This database gives us geospatial information of Bangladesh's administrative divisions. Use the bgd_admbnda_adm4_bbs_20201113.shp file in the folder.
```{r}
# Load the districts shapefile
districts <- st_read("bgd_adm_bbs_20201113_SHP/bgd_admbnda_adm4_bbs_20201113.shp")

# Filter the data
filtered_districts <- districts %>%
  filter(ADM2_EN == "Cox's Bazar")

#Plot the map:
ggplot() +
  geom_sf(data = filtered_districts, aes(color = ADM3_EN))

```

## Downloading refuge camp data
https://data.humdata.org/dataset/outline-of-camps-sites-of-rohingya-refugees-in-cox-s-bazar-bangladesh?

This data set gives us geographical information on refugee camps in Cox's Bazar, at different levels of detail. Use the 20230412_Camp Boundaries_A1, A2, A3.gdb file in the folder.
```{r}

camp_data <- st_read("path to your download")

camp_layers <- st_layers(dsn = "path to your download")
camp_layers

camp_outlines <- st_read("path to your download", "T20230412_A1_Camp_Outlines")
plot(camp_outlines)

camp_block_outlines <- st_read("path to your download", "T20230412_A2_Camp_Block_Outlines")
plot(camp_block_outlines)

camp_sub_block_outlines <- st_read("path to your download", "T20230412_A3_Camp_SubBlock_Outlines")
plot(camp_sub_block_outlines)

```

## Combining the maps

```{r}
# Combining the water point and district divisions maps
ggplot() +
  geom_sf(data = filtered_districts, aes(fill = ADM3_EN), color = "black") +
  scale_fill_discrete() +
  
  geom_sf(data = filtered_df, aes(color = status_clean)) +
  scale_color_manual(values = c("Functional" = "green", "Non-Functional, dry season" = "blue", "Non-Functional" = "orange")) +

  labs(fill = "Districts Name", color = "Water point Status")

```


```{r}
# Combining the refuge camps and district maps
ggplot() +
  geom_sf(data = filtered_districts, aes(fill = ADM3_EN), color = "black") +
  geom_sf(data = camp_outlines, fill = "transparent", color = "yellow") +
  scale_fill_discrete(name = "Districts Name") +
  scale_color_manual(name = "Refugee camp outlines", values = "yellow")

```

Note: mapping all 3 things together is not possible because of overlapping data (water points and refugee camps)

## Function: maps for different districts
```{r}

plot_filtered_district <- function(district_filter, layer, water_point_filter, camp_outline_filter, Title, Level) {
  # Apply filters to the district and water point data
  new_filtered_districts <- dplyr::filter(filtered_districts, district_filter)
  new_filtered_df <- dplyr::filter(filtered_df, water_point_filter)
  new_filtered_camp_outlines <- dplyr::filter(camp_outlines, camp_outline_filter)
  
  # Plotting
  ggplot() +
    geom_sf(data = new_filtered_districts, aes(fill = !!as.name(layer)), color = "black") +
    geom_sf(data = new_filtered_df, aes(color = status_clean)) +
    scale_color_manual(values = c("Functional" = "green", "Non-Functional, dry season" = "blue", "Non-Functional" = "orange")) +
    geom_sf(data = new_filtered_camp_outlines, fill = "transparent", color = "yellow") +
    scale_fill_discrete(name = Level) +
    labs(
      color = "Water point Status",
      title = Title) +
    theme_minimal()
  
}


```

### Plots for different districts
```{r}
Ukhia <- plot_filtered_district(district_filter = filtered_districts$ADM3_EN == "Ukhia",
                                layer = "ADM3_EN",
                                water_point_filter = filtered_df$clean_adm3 == "Ukhia",
                                camp_outline_filter = camp_outlines$Upazila == "Ukhia",
                                "Ukhia District",
                                "District Name")


Teknarf <- plot_filtered_district(district_filter = filtered_districts$ADM3_EN == "Teknaf",
                                  layer = "ADM3_EN",
                                  water_point_filter = filtered_df$clean_adm3 == "Teknaf",
                                  camp_outline_filter = camp_outlines$Upazila == "Teknaf",
                                  "Teknaf District",
                                  "District Name")
Ukhia + Teknarf
```

### Plots for different districts including sub district breakdown
```{r}
Ukhia <- plot_filtered_district(district_filter = filtered_districts$ADM3_EN == "Ukhia",
                                layer = "ADM4_EN",
                                water_point_filter = filtered_df$clean_adm3 == "Ukhia",
                                camp_outline_filter = camp_outlines$Upazila == "Ukhia",
                                "Ukhia District",
                                "Sub-district name")

Teknarf <- plot_filtered_district(district_filter = filtered_districts$ADM3_EN == "Teknaf",
                                  layer = "ADM4_EN",
                                  water_point_filter = filtered_df$clean_adm3 == "Teknaf",
                                  camp_outline_filter = camp_outlines$Upazila == "Teknaf",
                                  "Teknaf District",
                                  "Sub-district name")

Ukhia + Teknarf
```

We now need to dissagregate further, since there is still a lot of overlap between water points and refuge camps data. The sub districts I would prioritize visualizations for would be:

In Ukhia: Palong Khali

In Teknaf:  Whykong, Nhilla, Teknaf

## Everyhting again for higher disagregation
```{r}
subdistrict_plots <- function(district_name) {

# Filter the subdistrict data
filtered_subdist <- districts %>%
  filter(ADM4_EN == district_name)

  filtered_subdist_water <- filtered_df %>%
    filter(clean_adm4 == district_name)
  
  filtered_subdist_camps <- camp_outlines %>%
    filter(Union == district_name)

#Plot the subdistrict map:
ggplot() +
  geom_sf(data = filtered_subdist, aes(color = ADM4_EN))+
  geom_sf(data = filtered_subdist_water, aes(color = status_clean)) +
  scale_color_manual(values = c("Functional" = "green", "Non-Functional, dry season" = "blue", "Non-Functional" = "orange")) +
  geom_sf(data = filtered_subdist_camps, fill = "transparent", color = "yellow") +
  scale_fill_discrete(name = district_name) +
    labs(
      color = "Water point Status",
      title = paste(district_name, "Sub-district")) +
    theme_minimal()

}

Palong_Khali <- subdistrict_plots("Palong Khali")
Whykong <- subdistrict_plots("Whykong")
Nhilla <- subdistrict_plots("Nhilla")
Teknaf <- subdistrict_plots("Teknaf")

Palong_Khali
Whykong
Teknaf
Nhilla
```


## https://drive.google.com/drive/folders/1wJR0QBXhE_PwWJDI-pDM3jcdjjB1S7zc

This is the Tubewell Data from: https://rohingyaresponse.org/sectors/coxs-bazar/wash/

``` {r}

suppressWarnings({

tubewells <- read_excel("WASH_23.xlsx", sheet = 3) %>%
  filter(`Type of Beneficiaries` == "Rohingya")

colnames(tubewells)

# Changing the names of the long and lat colums 
tubewells$lat <- tubewells$"Latitude\r\n(Decimal Degrees)"
tubewells$"Latitude\r\n(Decimal Degrees)" <- NULL 

tubewells$long <- tubewells$"Longitude \r\n(Decimal Degrees)"
tubewells$"Longitude \r\n(Decimal Degrees)" <- NULL 

tubewells_sf <- st_as_sf(tubewells, coords = c("long", "lat"), crs = 4326)

tubewell_map <- tubewells_sf %>%
  group_by(`Type of Facilities`) %>%
  ggplot() +
  geom_sf(size=0.5, alpha=0.5) +
  theme_minimal() +
  xlab("Longitude [degrees]") +  # Add x-axis label
  ylab("Latitude [degrees]") +  # Add y-axis label
  labs(title = "Tubewell Data in Cox's Bazar, Bangladesh") # Add the title

print(tubewell_map)





})


```


Link here: https://data.humdata.org/dataset/cox-s-bazar-refugee-settlement-health-facilities/resource/9aa4e102-73cb-4b77-be2d-c9560d6ee9db

On January 2018, partners from the Cox Bazar Health Sector conducted a mapping exercise of the Health Facilities in the refugee camp areas. 
Data Sources: Cox Bazar Health Sector/WHO

``` {r}

health_facilities <- read_excel("cox_bazar_health_sector_infrastructure_january_2018.xlsx", sheet = 2)

health_facilities <- health_facilities[complete.cases(health_facilities$Long, health_facilities$Lat), ]

health_sf <- st_as_sf(health_facilities, coords = c("Long", "Lat"), crs = 4326)
	
diarrhea <- health_sf %>%
  filter(Type == "Diarrheal Treatment Center") %>%
  ggplot() +
  geom_sf() +
  theme_minimal() +
  xlab("Longitude [degrees]") +  # Add x-axis label
  ylab("Latitude [degrees]") +  # Add y-axis label
  labs(title = "Diarrheal Treatment Center in Cox's Bazar, Bangladesh") # Add the title

print(diarrhea)


```